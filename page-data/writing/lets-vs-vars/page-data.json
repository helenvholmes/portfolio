{"componentChunkName":"component---src-templates-blog-post-js","path":"/writing/lets-vs-vars/","result":{"data":{"markdownRemark":{"id":"6a34a09d-e50c-555d-ba8a-71a8a95b5264","html":"<p>Recently while trying to figure out the difference between <code>var</code>s and <code>let</code>s in Swift Google autocomplete offered up 'javascript' as a suggestion. Surprisingly, javascript also has lets and vars! The difference between them comes down to <em>scope</em>.</p>\n<p><a href=\"http://stackoverflow.com/questions/762011/javascript-let-keyword-vs-var-keyword\">@ThinkingStiff</a> did a great job of explaining it on Stack Overflow:</p>\n<h2>Globally:</h2>\n<pre><code>let me = 'go'; //globally scoped\nvar i = 'able'; //globally scoped\n</code></pre>\n<h2>Function:</h2>\n<pre><code>function ingWithinEstablishedParameters() {\n    let terOfRecommendation = 'awesome worker!'; //function block scoped\n    var sityCheerleading = 'go!'; //function block scoped\n};\n</code></pre>\n<h2>Block:</h2>\n<pre><code>function allyIlliterate() {\n    //tuce is *not* visible out here\n    for( let tuce = 0; tuce &#x26;amp;amp;lt; 5; tuce++ ) {\n        //tuce is only visible in here (and in the for() parentheses)\n    };\n    //tuce is *not* visible out here\n};\n\nfunction byE40() {\n    //nish *is* visible out here\n    for( var nish = 0; nish &#x26;amp;amp;lt; 5; nish++ ) {\n        //nish is visible to the whole function\n    };\n    //nish *is* visible out here\n};\n</code></pre>","frontmatter":{"date":"March 12, 2014","title":"Lets vs Vars","description":"HellO! Hi!","tags":["workplace-guides","javascript"]}}},"pageContext":{"id":"6a34a09d-e50c-555d-ba8a-71a8a95b5264"}},"staticQueryHashes":["3020398965"]}
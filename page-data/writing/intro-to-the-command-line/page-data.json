{"componentChunkName":"component---src-templates-blog-post-js","path":"/writing/intro-to-the-command-line/","result":{"data":{"markdownRemark":{"id":"59f18437-0eb7-5d14-9081-ba0cdc4faa4a","html":"<p><strong>Important Note: I’m working on a Mac, so this will all be Mac-specific.</strong></p>\n<p>The command line is fastest way to get around your computer and the secret portal to tools that will level-up your web-design coding skills: <a href=\"http://git-scm.com\" target=\"_blank\">git</a>, <a href=\"http://sass-lang.com\" target=\"_blank\">sass</a>, <a href=\"http://gruntjs.com\" target=\"_blank\">grunt</a>, <a href=\"http://yeoman.io\">yeoman</a>, <a href=\"http://jekyllrb.com\" target=\"_blank\">jekyll</a>, just to name a few. I’m no Unix-expert but the terminal is now the first thing I open when my computer opens because once you’ve learned the commands you need you’ll get around <em>so much faster</em> when coding. Trust me.</p>\n<p>Hit CMD+Space and type <code>Terminal</code>. Let’s get started:</p>\n<p>When you open your terminal, you see a few things: the name of your computer, the folder you’re in, and possibly the date. You always start out in the <em>Home</em> directory, which is equivalent to the \"home\" directory in Finder.</p>\n<p>To see the contents of a directory, type <code>ls -l</code>.</p>\n<p>I have a ton of stuff in mine, and you probably do too. Often times there are a lot of hidden files and folders in this directory, which you can see in the terminal (but cannot in Finder).</p>\n<p>You can make folders (directories) and files from the terminal pretty easily. Let’s make one now called <code>code</code>.</p>\n<pre><code>mkdir code\n</code></pre>\n<p>This is just a short way of saying ’make directory’. If you do another <code>ls -l</code>, you’ll see that we now have a directory called <code>code</code>.</p>\n<p>To change folders, you type <code>cd</code> - short for change directories. Let’s move into the <code>code</code> directory:</p>\n<pre><code>cd code\n</code></pre>\n<p>The terminal is intelligent. If you type \\`cd c\\` and then hit <code>TAB</code>, it will move you into the directory that starts with <code>c</code> or give you a few options for you to pick from. When I open my terminal, I always type <code>cd code</code> + <code>TAB</code> + <code><name of project></code> and get to the folder I want to be really quickly.</p>\n<p>Now that we’re in <code>code</code> let’s make a file. Let's set up some files for a web project:</p>\n<pre><code>touch index.html\n</code></pre>\n<p>This will make a new, empty file called <code>index.html</code>. Nice! Let's make folders and such like we just learned:</p>\n<pre><code>mkdir css\nmkdir js\ntouch page.html\ntouch post.html\n</code></pre>\n<p>You can see all of these things with the <code>ls -l</code> command from before.</p>\n<p>Awesome, but having all of our files in our <code>code</code> folder isn't very helpful. They need a project folder. Let's put them in a folder called <code>blog</code>:</p>\n<pre><code>mkdir blog &#x26;&#x26; mv * blog\n</code></pre>\n<p>There were three things in that line of code you haven't seen before, so let’s break it down:</p>\n<p><code>mkdir blog</code>: this you’ve done before. We’re making a directory called <code>blog</code>.</p>\n<p><code>&&</code>: this is command-line-speak for ’and’. So, ’do this and then do this’.</p>\n<p><code>mv</code>: this is short for <em>move</em>. Move the files.</p>\n<p><code>*</code>: this is a selector that means ’everything’. We could have moved every item one-by-one, but that would have been annoying.</p>\n<p><code>blog</code>: this is the target directory where we're moving everything, i.e. the folder we just made.</p>\n<p>Now, when you do <code>ls -l</code> you should just see one folder.</p>\n<p>Let's change into the blog directory:</p>\n<pre><code>cd blog\n</code></pre>\n<p>We just learned the <code>mv</code> command. You can use the <code>mv</code> command to rename files too. Let’s do it now:</p>\n<pre><code>mv page.html about.html\n</code></pre>\n<p>If you do another <code>ls -l</code>, you’ll see we now have an <code>about.html</code> file instead of <code>page.html</code>.</p>\n<p>We’ve decided that we don't want <code>about.html</code> at all. Let’s delete it. However, before we do, we should probably really analyze whether or not we want to: deleting something from the command line is like sending it to the Trash Can and emptying it in one fell swoop.</p>\n<pre><code>rm about.html\n</code></pre>\n<p><code>rm</code> is short fo</p>r <em>remove</em>. Let’s go up a directory and delete the entire folder:\n<pre><code>cd ..\nrm -rf blog/\n</code></pre>\n<p><code>..</code> is how you go up one directory. The <code>-rf</code> is necessary for doing anything to a folder (copying, deleting, moving) from the command line. If you’re familiar with programming basics, it means that we’re doing the action <em>recursively</em>.</p>\n<p>Now that we’re in <code>code</code>, let’s make a new directory called <code>webapp</code>. We’re going to copy to our Desktop next:</p>\n<pre><code>mkdir webapp\n</code></pre>\n<p>You can get to the Desktop (and anywhere else) from the <code>code</code> directory like this:</p>\n<pre><code>cd ~/Desktop\n</code></pre>\n<p>Remember our <em>home</em> directory from the very beginning? You can access that directory from any folder anywhere by <code>cd ~</code>.</p>\n<pre><code>cp -rf /code/webapp /Desktop/webapp\n</code></pre>\n<p><code>cp</code> stands for <em>copy</em>. Since we're copying a folder, we need to put the <code>-rf</code>.</p>\n<hr>\n<p>That's it for <em>Intro to the Command Line</em>. None of it is particularly complicated, it's just a matter of learning the commands and using them regularly. Learning the command line for me was how I started learning sass, git, grunt, and lots of other tools that took my web design to the next level.</p>\n<p><a href=\"http://jonibologna.com/command-line-primer-primer/\" target=\"_blank\">Joni Trythall</a> did a write-up on this too that I like and is worth looking over if you high-level reasoning for why the command line's great.</p>\n<p>If you've been working with the command line and are annoying that you can click and type, there are <a href=\"http://cmd.club/\" target=\"_blank\">commands for that</a>! I have these <a href=\"http://cmd.club/\" target=\"_blank\">bash stickers</a> that are pretty rad.</p>","frontmatter":{"date":"April 10, 2014","title":"Intro to the Command Line","description":"Hello! Hi!","tags":["learning"]}}},"pageContext":{"id":"59f18437-0eb7-5d14-9081-ba0cdc4faa4a"}},"staticQueryHashes":["3020398965"]}
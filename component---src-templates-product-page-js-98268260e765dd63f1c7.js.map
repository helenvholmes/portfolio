{"version":3,"sources":["webpack:///./src/templates/product-page.js"],"names":["ProductPageTemplate","image","title","heading","description","main","fullImage","className","style","backgroundImage","childImageSharp","fluid","src","boxShadow","backgroundColor","color","padding","imageInfo","image1","image2","image3","ProductPage","frontmatter","data","markdownRemark","full_image"],"mappings":"8FAAA,4GAMaA,EAAsB,SAAC,GAAD,IACjCC,EADiC,EACjCA,MACAC,EAFiC,EAEjCA,MACAC,EAHiC,EAGjCA,QACAC,EAJiC,EAIjCA,YACAC,EALiC,EAKjCA,KACAC,EANiC,EAMjCA,UANiC,OAQjC,6BAASC,UAAU,6BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,yBACEA,UAAU,0CACVC,MAAO,CACLC,gBAAgB,QACZR,EAAMS,gBACJT,EAAMS,gBAAgBC,MAAMC,IAC5BX,GAHS,MAOjB,wBACEM,UAAU,iCACVC,MAAO,CACLK,UAAW,oCACXC,gBAAiB,OACjBC,MAAO,QACPC,QAAS,SAGVd,IAGL,yBAAKK,UAAU,WACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,sCACXJ,GAEH,2BAAIC,KAGR,yBAAKG,UAAU,WACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,sCACXF,EAAKF,SAER,2BAAIE,EAAKD,eAGb,yBAAKG,UAAU,oBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,8BACb,6BAASA,UAAU,iBACjB,kBAAC,IAAD,CAAwBU,UAAWZ,EAAKa,WAG5C,yBAAKX,UAAU,kBACb,6BAASA,UAAU,iBACjB,kBAAC,IAAD,CAAwBU,UAAWZ,EAAKc,YAI9C,yBAAKZ,UAAU,kBACb,6BAASA,UAAU,iBACjB,kBAAC,IAAD,CAAwBU,UAAWZ,EAAKe,aAKhD,yBACEb,UAAU,6BACVC,MAAO,CACLC,gBAAgB,QACdH,EAAUI,gBACNJ,EAAUI,gBAAgBC,MAAMC,IAChCN,GAHS,cAuDlBe,UAzBK,SAAC,GAAc,IACzBC,EADwB,EAAXC,KACQC,eAArBF,YAER,OACE,kBAAC,IAAD,KACE,kBAACtB,EAAD,CACEC,MAAOqB,EAAYrB,MACnBC,MAAOoB,EAAYpB,MACnBC,QAASmB,EAAYnB,QACrBC,YAAakB,EAAYlB,YACzBC,KAAMiB,EAAYjB,KAClBC,UAAWgB,EAAYG","file":"component---src-templates-product-page-js-98268260e765dd63f1c7.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport PreviewCompatibleImage from '../components/PreviewCompatibleImage'\n\nexport const ProductPageTemplate = ({\n  image,\n  title,\n  heading,\n  description,\n  main,\n  fullImage,\n}) => (\n  <section className=\"section section--gradient\">\n    <div className=\"container\">\n      <div className=\"section\">\n        <div className=\"columns\">\n          <div className=\"column is-10 is-offset-1\">\n            <div className=\"content\">\n              <div\n                className=\"full-width-image-container margin-top-0\"\n                style={{\n                  backgroundImage: `url(${\n                    !!image.childImageSharp\n                      ? image.childImageSharp.fluid.src\n                      : image\n                  })`,\n                }}\n              >\n                <h2\n                  className=\"has-text-weight-bold is-size-1\"\n                  style={{\n                    boxShadow: '0.5rem 0 0 #f40, -0.5rem 0 0 #f40',\n                    backgroundColor: '#f40',\n                    color: 'white',\n                    padding: '1rem',\n                  }}\n                >\n                  {title}\n                </h2>\n              </div>\n              <div className=\"columns\">\n                <div className=\"column is-7\">\n                  <h3 className=\"has-text-weight-semibold is-size-2\">\n                    {heading}\n                  </h3>\n                  <p>{description}</p>\n                </div>\n              </div>\n              <div className=\"columns\">\n                <div className=\"column is-7\">\n                  <h3 className=\"has-text-weight-semibold is-size-3\">\n                    {main.heading}\n                  </h3>\n                  <p>{main.description}</p>\n                </div>\n              </div>\n              <div className=\"tile is-ancestor\">\n                <div className=\"tile is-vertical\">\n                  <div className=\"tile\">\n                    <div className=\"tile is-parent is-vertical\">\n                      <article className=\"tile is-child\">\n                        <PreviewCompatibleImage imageInfo={main.image1} />\n                      </article>\n                    </div>\n                    <div className=\"tile is-parent\">\n                      <article className=\"tile is-child\">\n                        <PreviewCompatibleImage imageInfo={main.image2} />\n                      </article>\n                    </div>\n                  </div>\n                  <div className=\"tile is-parent\">\n                    <article className=\"tile is-child\">\n                      <PreviewCompatibleImage imageInfo={main.image3} />\n                    </article>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"full-width-image-container\"\n                style={{\n                  backgroundImage: `url(${\n                    fullImage.childImageSharp\n                      ? fullImage.childImageSharp.fluid.src\n                      : fullImage\n                  })`,\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n)\n\nProductPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  description: PropTypes.string,\n  main: PropTypes.shape({\n    heading: PropTypes.string,\n    description: PropTypes.string,\n    image1: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    image2: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    image3: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  }),\n  fullImage: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n}\n\nconst ProductPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark\n\n  return (\n    <Layout>\n      <ProductPageTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        description={frontmatter.description}\n        main={frontmatter.main}\n        fullImage={frontmatter.full_image}\n      />\n    </Layout>\n  )\n}\n\nProductPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default ProductPage\n\nexport const productPageQuery = graphql`\n  query ProductPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        heading\n        description\n        main {\n          heading\n          description\n          image1 {\n            alt\n            image {\n              childImageSharp {\n                fluid(maxWidth: 526, quality: 92) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          image2 {\n            alt\n            image {\n              childImageSharp {\n                fluid(maxWidth: 526, quality: 92) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          image3 {\n            alt\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1075, quality: 72) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n        full_image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
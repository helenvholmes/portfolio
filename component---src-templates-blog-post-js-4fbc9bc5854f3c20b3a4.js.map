{"version":3,"sources":["webpack:///./src/templates/blog.module.css","webpack:///./src/components/Content.js","webpack:///./src/templates/blog-post.js"],"names":["module","exports","HTMLContent","content","className","dangerouslySetInnerHTML","__html","Content","BlogPostTemplate","contentComponent","tags","description","title","helmet","date","PostContent","BlogPostStyles","section","length","style","marginTop","map","tag","key","to","BlogPost","post","data","markdownRemark","Layout","html","frontmatter","titleTemplate","name"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,QAAU,8BAA8B,MAAQ,8B,0MCErDC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAZ,OACzB,yBAAKA,UAAWA,EAAWC,wBAAyB,CAAEC,OAAQH,MAcjDI,EAXC,SAAC,GAAD,IAAGJ,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAZ,OACd,yBAAKA,UAAWA,GAAYD,ICCjBK,EAAmB,SAAC,GAQ1B,IAPLL,EAOI,EAPJA,QACAM,EAMI,EANJA,iBAEAC,GAII,EALJC,YAKI,EAJJD,MACAE,EAGI,EAHJA,MACAC,EAEI,EAFJA,OACAC,EACI,EADJA,KAEMC,EAAcN,GAAoBF,EAExC,OACE,6BAASH,UAAWY,IAAeC,SAChCJ,GAAU,GACX,wBAAIT,UAAWY,IAAeJ,OAC3BA,GAEH,+BAAQE,GACR,kBAACC,EAAD,CAAaZ,QAASA,IACrBO,GAAQA,EAAKQ,OACZ,yBAAKC,MAAO,CAAEC,UAAU,SACtB,oCACA,wBAAIhB,UAAU,WACXM,EAAKW,KAAI,SAAAC,GAAG,OACX,wBAAIC,IAAKD,EAAG,OACV,kBAAC,OAAD,CAAME,GAAE,SAAW,IAAUF,GAArB,KAA+BA,SAK7C,OA8CKG,UAhCE,SAAC,GAAc,IACNC,EADK,EAAXC,KACVC,eAER,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CACE1B,QAASuB,EAAKI,KACdrB,iBAAkBP,EAClBS,YAAae,EAAKK,YAAYpB,YAC9BE,OACE,kBAAC,IAAD,CAAQmB,cAAc,aACpB,kCAAWN,EAAKK,YAAYnB,OAC5B,0BACEqB,KAAK,cACL9B,QAAO,GAAKuB,EAAKK,YAAYpB,eAInCD,KAAMgB,EAAKK,YAAYrB,KACvBE,MAAOc,EAAKK,YAAYnB,MACxBE,KAAMY,EAAKK,YAAYjB","file":"component---src-templates-blog-post-js-4fbc9bc5854f3c20b3a4.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"blog-module--section--m5L_O\",\"title\":\"blog-module--title--14O4k\"};","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n)\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n)\n\nContent.propTypes = {\n  content: PropTypes.node,\n  className: PropTypes.string,\n}\n\nHTMLContent.propTypes = Content.propTypes\n\nexport default Content\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { kebabCase } from 'lodash'\nimport Helmet from 'react-helmet'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/Layout'\nimport BlogPostStyles from './blog.module.css'\nimport Content, { HTMLContent } from '../components/Content'\n\nexport const BlogPostTemplate = ({\n  content,\n  contentComponent,\n  description,\n  tags,\n  title,\n  helmet,\n  date,\n}) => {\n  const PostContent = contentComponent || Content\n\n  return (\n    <section className={BlogPostStyles.section}>\n      {helmet || ''}\n      <h1 className={BlogPostStyles.title}>\n        {title}\n      </h1>\n      <small>{date}</small>\n      <PostContent content={content} />\n      {tags && tags.length ? (\n        <div style={{ marginTop: `4rem` }}>\n          <h4>Tags</h4>\n          <ul className=\"taglist\">\n            {tags.map(tag => (\n              <li key={tag + `tag`}>\n                <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n    </section>\n  )\n}\n\nBlogPostTemplate.propTypes = {\n  content: PropTypes.node.isRequired,\n  contentComponent: PropTypes.func,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  helmet: PropTypes.object,\n  date: PropTypes.object,\n}\n\nconst BlogPost = ({ data }) => {\n  const { markdownRemark: post } = data\n\n  return (\n    <Layout>\n      <BlogPostTemplate\n        content={post.html}\n        contentComponent={HTMLContent}\n        description={post.frontmatter.description}\n        helmet={\n          <Helmet titleTemplate=\"%s | Blog\">\n            <title>{`${post.frontmatter.title}`}</title>\n            <meta\n              name=\"description\"\n              content={`${post.frontmatter.description}`}\n            />\n          </Helmet>\n        }\n        tags={post.frontmatter.tags}\n        title={post.frontmatter.title}\n        date={post.frontmatter.date}\n      />\n    </Layout>\n  )\n}\n\nBlogPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object,\n  }),\n}\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query BlogPostByID($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}